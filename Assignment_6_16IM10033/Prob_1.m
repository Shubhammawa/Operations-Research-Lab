% Shubham Mawa
% 16IM10033
clc;
clear all;
% A paper mill has standard reels of paper, 60cm width and 100cm
% length.They need to produce reels of the following specifications.

% Width             60  60  60  60  60
% Length            55  45  25  35  40
% No of pieces      200 150 100 50  175


% Master Problem
% Objective - Find minimum number of standard reels required.

% Minimize Z = x1 + x2 + ...
% st Ax = b
% xi >= 0
% xi = Number of sheets cut in pattern i
% Ai = Vector representing the pattern

c = [1,1,1,1,1];

A = [1,0,0,0,0;
     0,2,0,0,0;
     0,0,4,0,0;
     0,0,0,2,0;
     0,0,0,0,2];
 
b = [200;150;100;50;175];

IB = [1:5];

B = A(:,IB);

% cbar = c - c(IB)/B*A
% if cbar < 0
%   optimality reached
% else 
%   c(IB)/B*A < 1
%   c(IB)/B*a < 1           a = [a1;a2;a3;a4;a5]
%   => Column a will enter the matrix A and some column from A will leave

% Subproblem

% Max c(IB)/B*a
% => Max [1,1,1,1]/B*a
% s.t 55a1 + 45a2 + 25a3 + 35a4 + 40a5 <= 100
% ai >= 0



A2 = [55,45,25,35,40];

b2 = [100];

lb = [0;0;0;0;0];

l = [55,45,25,35,40];
theta = ones(1,5);
t = 0;

while(t~=1)
    c2 = c(IB)/B;           % Represents coefficients of the objective function of the subproblem
    [a, fval] = linprog(-c2,A2,b2,[],[],lb);

    if c(IB)/B*a < 1
        fprintf('Optimality reached\n');
        x = (b'/B')';
        t = 1;
        fprintf('Minimum total number of sheets required = %d\n',sum(x));
    elseif c(IB)/B*a > 1
        % Column a will enter the Matrix A and some column of A will leave the
        % matrix
    
        % Finding the leaving column
        for i = 1:5                            % Loop runs from 1:n; n = number of basic variables 
            theta(i) = 100 - l*B(:,i);         % Calculating the waste generated by each pattern in the basis
        end
        [theta, lx] = max(theta);              % Finding the pattern with the maximum waste
        B(:,lx) = a;                           % Replacing the above found column with the entering column
    
    end
        
    
end
fprintf('The pattern matrix\n')
disp(B)






